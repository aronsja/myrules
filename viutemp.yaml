mixed-port: 7890
allow-lan: true
bind-address: "*"
# Only applicable when setting allow-lan to true
# "*": bind all IP addresses
# 192.168.122.11: bind a single IPv4 address
# "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address
mode: Rule
log-level: info
external-controller: :9090

dns:
  enable: true # 关闭将使用系统 DNS
  prefer-h3: true # 开启 DoH 支持 HTTP/3，将并发尝试
  listen: 0.0.0.0:53 # 开启 DNS 服务器监听
  # ipv6: false # false 将返回 AAAA 的空结果
  # ipv6-timeout: 300 # 单位：ms，内部双栈并发时，向上游查询 AAAA 时，等待 AAAA 的时间，默认 100ms
  # 用于解析 nameserver，fallback 以及其他DNS服务器配置的，DNS 服务域名
  # 只能使用纯 IP 地址，可使用加密 DNS
  default-nameserver:
    - 114.114.114.114
    - 8.8.8.8
    - tls://1.12.12.12:853
    - tls://223.5.5.5:853
    - system # append DNS server from system configuration. If not found, it would print an error log and skip.
  enhanced-mode: fake-ip # or redir-host

  fake-ip-range: 198.18.0.1/16 # fake-ip 池设置

  # use-hosts: true # 查询 hosts

  # 配置不使用fake-ip的域名
  # fake-ip-filter:
  #   - '*.lan'
  #   - localhost.ptlogin2.qq.com

  # DNS主要域名配置
  # 支持 UDP，TCP，DoT，DoH，DoQ
  # 这部分为主要 DNS 配置，影响所有直连，确保使用对大陆解析精准的 DNS
  nameserver:
    #- 114.114.114.114 # default value
    #- 8.8.8.8 # default value
    - tls://223.5.5.5:853 # DNS over TLS
    - https://doh.pub/dns-query # DNS over HTTPS
    - https://dns.alidns.com/dns-query#h3=true # 强制 HTTP/3，与 perfer-h3 无关，强制开启 DoH 的 HTTP/3 支持，若不支持将无法使用
    #- https://mozilla.cloudflare-dns.com/dns-query#DNS&h3=true # 指定策略组和使用 HTTP/3
    - dhcp://en0 # dns from dhcp
    - quic://dns.adguard.com:784 # DNS over QUIC
    # - '8.8.8.8#en0' # 兼容指定DNS出口网卡

  # 当配置 fallback 时，会查询 nameserver 中返回的 IP 是否为 CN，非必要配置
  # 当不是 CN，则使用 fallback 中的 DNS 查询结果
  # 确保配置 fallback 时能够正常查询
   fallback:
  #   - tcp://1.1.1.1
     - 'tcp://1.1.1.1#♻️ 自动选择' # 指定 DNS 过代理查询，ProxyGroupName 为策略组名或节点名，过代理配置优先于配置出口网卡，当找不到策略组或节点名则设置为出口网卡

  # 专用于节点域名解析的 DNS 服务器，非必要配置项
  # 配置服务器若查询失败将使用 nameserver，非并发查询
   proxy-server-nameserver:
   - https://dns.google/dns-query
   - tls://one.one.one.one

  # 配置 fallback 使用条件
   fallback-filter:
     geoip: true # 配置是否使用 geoip
     geoip-code: CN # 当 nameserver 域名的 IP 查询 geoip 库为 CN 时，不使用 fallback 中的 DNS 查询结果
  #   配置强制 fallback，优先于 IP 判断，具体分类自行查看 geosite 库
     geosite:
       - gfw
  #   如果不匹配 ipcidr 则使用 nameservers 中的结果
     ipcidr:
       - 240.0.0.0/4
     domain:
       - '+.google.com'
       - '+.facebook.com'
       - '+.youtube.com'

  # 配置查询域名使用的 DNS 服务器
  nameserver-policy:
    #   'www.baidu.com': '114.114.114.114'
    #   '+.internal.crop.com': '10.0.0.1'
    "geosite:cn,private,apple":
      - https://doh.pub/dns-query
      - https://dns.alidns.com/dns-query
    "geosite:category-ads-all": rcode://success
    "www.baidu.com,+.google.cn": [223.5.5.5, https://dns.alidns.com/dns-query]
    ## global，dns 为 rule-providers 中的名为 global 和 dns 规则订阅，
    ## 且 behavior 必须为 domain/classical，当为 classical 时仅会生效域名类规则
    # "rule-set:global,dns": 8.8.8.8


proxy-providers:
  ✈️ VIUIM:
    type: http
    url: ""
    interval: 86400 #更新间隔，单位S
    path: ./VIUIM.yaml
    health-check:
      enable: true
      interval: 300 #健康检查间隔，单位S
      #lazy: true
      url: https://cp.cloudflare.com/generate_204
  ✈️ 机场:
    type: http
    url: ""
    interval: 86400
    path: ./机场.yaml
    health-check:
      enable: true
      interval: 300
      #lazy: true
      url: https://cp.cloudflare.com/generate_204

proxy-groups:
  - name: ✈️ VIUIM
    type: url-test # 代理组类型，将按照 url 测试结果使用延迟最低节点
    filter: '港|台|日|韩|新加坡|美' # 机场节点筛选关键词
    url: "https://cp.cloudflare.com/generate_204"
    interval: 60
    tolerance: 50
    #strategy: consistent-hashing # or round-robin
    proxies:
    use:
      - ✈️ VIUIM
  - name: ✈️ 机场
    type: load-balance # load-balance 将按照算法随机选择节点
    filter: '港|台|日|韩|新加坡|美' # 机场节点筛选关键词
    url: "https://cp.cloudflare.com/generate_204"
    interval: 60
    #tolerance: 50
    strategy: round-robin
    proxies:
    use:
      - ✈️ 机场


  - name: 🚀 节点选择
    type: select
    proxies:
      - DIRECT
      - ✈️ VIUIM
      - ✈️ 机场
      - ♻️ 自动选择
  - name: ♻️ 自动选择
    type: url-test
    url: https://cp.cloudflare.com/generate_204
    interval: 600
    proxies:
      - ✈️ VIUIM
      - ✈️ 机场
  - name: 🤖 OpenAi
    type: select
    proxies:
      - 🚀 节点选择
      - ✈️ VIUIM
      - ✈️ 机场
  - name: 🌍 油管
    type: select
    proxies:
      - 🚀 节点选择
      - ♻️ 自动选择
      - 🎯 全球直连
      - ✈️ VIUIM
      - ✈️ 机场
  - name: 🎥 Netflix
    type: select
    proxies:
      - 🚀 节点选择
      - 🎯 全球直连
      - ✈️ VIUIM
      - ✈️ 机场
  - name: 📲 电报信息
    type: select
    proxies:
      - 🚀 节点选择
      - ♻️ 自动选择
      - 🎯 全球直连
      - ✈️ VIUIM
      - ✈️ 机场
  - name: Ⓜ️ 微软服务
    type: select
    proxies:
      - 🎯 全球直连
      - 🚀 节点选择
      - ♻️ 自动选择
      - ✈️ VIUIM
      - ✈️ 机场
  - name: 🍎 苹果服务
    type: select
    proxies:
      - 🎯 全球直连
      - 🚀 节点选择
      - ♻️ 自动选择
      - ✈️ VIUIM
      - ✈️ 机场
  - name: 📢 HBO
    type: select
    proxies:
      - 🚀 节点选择
      - ✈️ VIUIM
      - ✈️ 机场
  - name: 🎯 全球直连
    type: select
    proxies:
      - DIRECT
      - 🚀 节点选择
      - ♻️ 自动选择
      - ✈️ VIUIM
      - ✈️ 机场
  - name: 🛑 全球拦截
    type: select
    proxies:
      - REJECT
      - DIRECT
  - name: 🍃 应用净化
    type: select
    proxies:
      - REJECT
      - DIRECT
  - name: 🐟 漏网之鱼
    type: select
    proxies:
      - 🚀 节点选择
      - ♻️ 自动选择
      - 🎯 全球直连
      - ✈️ VIUIM
      - ✈️ 机场


rule-providers:
  myproxy:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/aronsja/myrules/main/proxy.yaml"
    interval: 86400
    path: ./ruleset/myproxy.yaml
  mydirect:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/aronsja/myrules/main/direct.yaml"
    interval: 86400
    path: ./ruleset/mydirect.yaml
  myreject:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/aronsja/myrules/main/reject.yaml"
    interval: 86400
    path: ./ruleset/myreject.yaml    
  LocalAreaNetwork:
    behavior: classical # domain, ipcidr or classical (premium core only)
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/LocalAreaNetwork.yaml"
    interval: 86400
    path: ./ruleset/LocalAreaNetwork.yaml
  UnBan:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/UnBan.yaml"
    interval: 86400
    path: ./ruleset/UnBan.yaml
  BanAD:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/AdvertisingLite/AdvertisingLite.yaml"
    interval: 86400
    path: ./ruleset/BanAD.yaml
  BanProgramAD:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/BanProgramAD.yaml"
    interval: 86400
    path: ./ruleset/BanProgramAD.yaml
  HBO:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBO/HBO.yaml"
    interval: 86400
    path: ./ruleset/HBO.yaml
  HBOAsia:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/HBOAsia/HBOAsia.yaml"
    interval: 86400
    path: ./ruleset/HBOAsia.yaml
  SteamCN:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Providers/Ruleset/SteamCN.yaml"
    interval: 86400
    path: ./ruleset/SteamCN.yaml
  Microsoft:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.yaml"
    interval: 86400
    path: ./ruleset/Microsoft.yaml
  Apple:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Apple/Apple_Classical.yaml"
    interval: 86400
    path: ./ruleset/Apple.yaml
  YouTube:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.yaml"
    interval: 86400
    path: ./ruleset/YouTube.yaml
  Telegram:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.yaml"
    interval: 86400
    path: ./ruleset/Telegram.yaml
  ProxyLite:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Proxy/Proxy_Classical.yaml"
    interval: 86400
    path: ./ruleset/Proxy.yaml
  Netflix:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.yaml"
    interval: 86400
    path: ./ruleset/Netflix.yaml
  China:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMax/ChinaMax.yaml"
    interval: 86400
    path: ./ruleset/ChinaMax.yaml
  OpenAi:
    behavior: classical
    type: http
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.yaml"
    interval: 86400
    path: ./ruleset/OpenAi.yaml

rules:
 - RULE-SET,OpenAi,🤖 OpenAi
 - RULE-SET,LocalAreaNetwork,🎯 全球直连
 - RULE-SET,UnBan,🎯 全球直连
 - RULE-SET,BanAD,🛑 全球拦截
 - RULE-SET,BanProgramAD,🍃 应用净化
 - RULE-SET,HBO,📢 HBO
 - RULE-SET,HBOAsia,📢 HBO
 - RULE-SET,GoogleCN,🎯 全球直连
 - RULE-SET,SteamCN,🎯 全球直连
 - RULE-SET,Microsoft,Ⓜ️ 微软服务
 - RULE-SET,Apple,🍎 苹果服务
 - RULE-SET,Telegram,📲 电报信息
 - RULE-SET,ProxyLite,🚀 节点选择
 - RULE-SET,YouTube,🌍 油管
 - RULE-SET,Netflix,🎥 Netflix
 - RULE-SET,China,🎯 全球直连
 - GEOIP,CN,🎯 全球直连
 - MATCH,🐟 漏网之鱼
